'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Namespace LightSwitchApplication.Implementation
    
    <Global.System.ServiceModel.DomainServices.Hosting.EnableClientAccess()> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataDomainService
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DomainService(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New()
            MyBase.New()
        End Sub
    
    #Region "Public methods"
    
    #Region "ProductFeedback"
    
        Public Sub InsertProductFeedback(ByVal entity As Global.ApplicationData.Implementation.ProductFeedback)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.ProductFeedbacks.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateProductFeedback(ByVal currentEntity As Global.ApplicationData.Implementation.ProductFeedback)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.ProductFeedbacks, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteProductFeedback(ByVal entity As Global.ApplicationData.Implementation.ProductFeedback)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ProductFeedbacks.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Hyperlink"
    
        Public Sub InsertHyperlink(ByVal entity As Global.ApplicationData.Implementation.Hyperlink)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Hyperlinks.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateHyperlink(ByVal currentEntity As Global.ApplicationData.Implementation.Hyperlink)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Hyperlinks, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteHyperlink(ByVal entity As Global.ApplicationData.Implementation.Hyperlink)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Hyperlinks.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "User"
    
        Public Sub InsertUser(ByVal entity As Global.ApplicationData.Implementation.User)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Users.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateUser(ByVal currentEntity As Global.ApplicationData.Implementation.User)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Users, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteUser(ByVal entity As Global.ApplicationData.Implementation.User)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Users.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Customer"
    
        Public Sub InsertCustomer(ByVal entity As Global.ApplicationData.Implementation.Customer)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Customers.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateCustomer(ByVal currentEntity As Global.ApplicationData.Implementation.Customer)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Customers, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteCustomer(ByVal entity As Global.ApplicationData.Implementation.Customer)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Customers.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Order"
    
        Public Sub InsertOrder(ByVal entity As Global.ApplicationData.Implementation.Order)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Orders.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateOrder(ByVal currentEntity As Global.ApplicationData.Implementation.Order)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Orders, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteOrder(ByVal entity As Global.ApplicationData.Implementation.Order)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Orders.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Product"
    
        Public Sub InsertProduct(ByVal entity As Global.ApplicationData.Implementation.Product)
            If (entity.EntityState <> Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.ObjectStateManager.ChangeObjectState(entity, Global.System.Data.EntityState.Added)
            Else
                Me.ObjectContext.Products.AddObject(entity)
            End If
        End Sub
    
        Public Sub UpdateProduct(ByVal currentEntity As Global.ApplicationData.Implementation.Product)
            Global.System.ServiceModel.DomainServices.EntityFramework.ObjectContextExtensions.AttachAsModified(Me.ObjectContext.Products, currentEntity, Me.ChangeSet.GetOriginal(currentEntity))
        End Sub
    
        Public Sub DeleteProduct(ByVal entity As Global.ApplicationData.Implementation.Product)
            If (entity.EntityState = Global.System.Data.EntityState.Detached) Then
                Me.ObjectContext.Products.Attach(entity)
            End If
    
            Me.DeleteEntity(entity)
        End Sub
    #End Region
    
    #Region "Queries"
        Public Function ProductFeedbacks_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("ProductFeedbacks_Single", frameworkOperators, Id)
        End Function
    
        Public Function ProductFeedbacks_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("ProductFeedbacks_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function ProductFeedbacks_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("ProductFeedbacks_All", frameworkOperators)
        End Function
    
        Public Function Hyperlinks_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Hyperlink)("Hyperlinks_Single", frameworkOperators, Id)
        End Function
    
        Public Function Hyperlinks_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Hyperlink)("Hyperlinks_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function Hyperlinks_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Hyperlink)("Hyperlinks_All", frameworkOperators)
        End Function
    
        Public Function Users_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.User)("Users_Single", frameworkOperators, Id)
        End Function
    
        Public Function Users_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.User)("Users_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function Users_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.User)("Users_All", frameworkOperators)
        End Function
    
        Public Function Customers_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Customer)("Customers_Single", frameworkOperators, Id)
        End Function
    
        Public Function Customers_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Customer)("Customers_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function Customers_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Customer)("Customers_All", frameworkOperators)
        End Function
    
        Public Function Orders_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Order)("Orders_Single", frameworkOperators, Id)
        End Function
    
        Public Function Orders_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Order)("Orders_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function Orders_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Order)("Orders_All", frameworkOperators)
        End Function
    
        Public Function Products_Single(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Product)("Products_Single", frameworkOperators, Id)
        End Function
    
        Public Function Products_SingleOrDefault(ByVal frameworkOperators As String, ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Product)("Products_SingleOrDefault", frameworkOperators, Id)
        End Function
    
        Public Function Products_All(ByVal frameworkOperators As String) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Return Me.GetQuery(Of Global.ApplicationData.Implementation.Product)("Products_All", frameworkOperators)
        End Function
    
    #End Region
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __GetEntitySetCanInformation(ByVal entitySetName as String) As Integer
            Return MyBase.GetEntitySetCanInformation(entitySetName)
        End Function
    
        <Global.System.ServiceModel.DomainServices.Server.Invoke(HasSideEffects:=False)> _
        Public Function __CanExecuteOperation(ByVal operationName as String) As Boolean
            Return MyBase.CanExecuteOperation(operationName)
        End Function
    
    #End Region
    
        Protected Overrides Function CreateDataService() As Global.Microsoft.LightSwitch.IDataService
            Return New Global.LightSwitchApplication.DataWorkspace().ApplicationData
        End Function
    
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationDataServiceImplementation
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation(Of Global.ApplicationData.Implementation.ApplicationDataObjectContext)
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService)
        End Sub
    
    #Region "Queries"
        Public Function ProductFeedbacks_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("ProductFeedbacks_All"), _
                Function(p) (Id.HasValue AndAlso CBool((p.Id = Id))))
            Return query
        End Function
    
        Public Function ProductFeedbacks_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("ProductFeedbacks_All"), _
                Function(p) (Id.HasValue AndAlso CBool((p.Id = Id))))
            Return query
        End Function
    
        Public Function ProductFeedbacks_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.ProductFeedback)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.ProductFeedback)("[ProductFeedbacks]").AsQueryable()
            Return query
        End Function
    
        Public Function Hyperlinks_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Hyperlink)("Hyperlinks_All"), _
                Function(h) (Id.HasValue AndAlso CBool((h.Id = Id))))
            Return query
        End Function
    
        Public Function Hyperlinks_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Hyperlink)("Hyperlinks_All"), _
                Function(h) (Id.HasValue AndAlso CBool((h.Id = Id))))
            Return query
        End Function
    
        Public Function Hyperlinks_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Hyperlink)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.Hyperlink)("[Hyperlinks]").AsQueryable()
            Return query
        End Function
    
        Public Function Users_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.User)("Users_All"), _
                Function(u) (Id.HasValue AndAlso CBool((u.Id = Id))))
            Return query
        End Function
    
        Public Function Users_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.User)("Users_All"), _
                Function(u) (Id.HasValue AndAlso CBool((u.Id = Id))))
            Return query
        End Function
    
        Public Function Users_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.User)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.User)("[Users]").AsQueryable()
            Return query
        End Function
    
        Public Function Customers_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Customer)("Customers_All"), _
                Function(c) (Id.HasValue AndAlso CBool((c.Id = Id))))
            Return query
        End Function
    
        Public Function Customers_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Customer)("Customers_All"), _
                Function(c) (Id.HasValue AndAlso CBool((c.Id = Id))))
            Return query
        End Function
    
        Public Function Customers_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Customer)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.Customer)("[Customers]").AsQueryable()
            Return query
        End Function
    
        Public Function Orders_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Order)("Orders_All"), _
                Function(o) (Id.HasValue AndAlso CBool((o.Id = Id))))
            Return query
        End Function
    
        Public Function Orders_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Order)("Orders_All"), _
                Function(o) (Id.HasValue AndAlso CBool((o.Id = Id))))
            Return query
        End Function
    
        Public Function Orders_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Order)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.Order)("[Orders]").AsQueryable()
            Return query
        End Function
    
        Public Function Products_Single(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Product)("Products_All"), _
                Function(p) (Id.HasValue AndAlso CBool((p.Id = Id))))
            Return query
        End Function
    
        Public Function Products_SingleOrDefault(ByVal Id As Global.System.Nullable(Of Integer)) As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            query = Global.System.Linq.Queryable.Where( _
                Me.GetQuery(Of Global.ApplicationData.Implementation.Product)("Products_All"), _
                Function(p) (Id.HasValue AndAlso CBool((p.Id = Id))))
            Return query
        End Function
    
        Public Function Products_All() As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            Dim query As Global.System.Linq.IQueryable(Of Global.ApplicationData.Implementation.Product)
            query = MyBase.CreateQuery(Of Global.ApplicationData.Implementation.Product)("[Products]").AsQueryable()
            Return query
        End Function
    
    #End Region

    #Region "Protected methods"
        Protected Overrides Function CreateObject(ByVal type As Global.System.Type) As Object
            If (type Is GetType(Global.ApplicationData.Implementation.ProductFeedback)) Then
                Return New Global.ApplicationData.Implementation.ProductFeedback
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Hyperlink)) Then
                Return New Global.ApplicationData.Implementation.Hyperlink
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.User)) Then
                Return New Global.ApplicationData.Implementation.User
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Customer)) Then
                Return New Global.ApplicationData.Implementation.Customer
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Order)) Then
                Return New Global.ApplicationData.Implementation.Order
            End If
            If (type Is GetType(Global.ApplicationData.Implementation.Product)) Then
                Return New Global.ApplicationData.Implementation.Product
            End If
    
            Return MyBase.CreateObject(type)
        End Function
    
        Protected Overrides Function CreateObjectContext() As Global.ApplicationData.Implementation.ApplicationDataObjectContext
            Return New Global.ApplicationData.Implementation.ApplicationDataObjectContext(MyBase.GetEntityConnectionString( _
                "_IntrinsicData", _
                "res://*/ApplicationData.csdl|res://*/ApplicationData.ssdl|res://*/ApplicationData.msl", _
                "System.Data.SqlClient"))
        End Function
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.ProductFeedback)) Then
                Return New Global.ApplicationData.Implementation.ProductFeedback()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Hyperlink)) Then
                Return New Global.ApplicationData.Implementation.Hyperlink()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.User)) Then
                Return New Global.ApplicationData.Implementation.User()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Customer)) Then
                Return New Global.ApplicationData.Implementation.Customer()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Order)) Then
                Return New Global.ApplicationData.Implementation.Order()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Product)) Then
                Return New Global.ApplicationData.Implementation.Product()
            End If
            Return Nothing
        End Function
    
    #End Region
    
    End Class
    
    #Region "DataServiceImplementationFactory"
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.IDataServiceFactory))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class DataServiceFactory
        Inherits Global.Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    
        Protected Overrides Function CreateDataService(ByVal dataServiceType As Global.System.Type) As Global.Microsoft.LightSwitch.IDataService
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.ApplicationDataService()
            End If
            Return MyBase.CreateDataService(dataServiceType)
        End Function
    
        Protected Overrides Function CreateDataServiceImplementation(Of TDataService As Global.Microsoft.LightSwitch.IDataService)(ByVal dataService As TDataService) As Global.Microsoft.LightSwitch.Internal.IDataServiceImplementation
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService)
            End If
            Return MyBase.CreateDataServiceImplementation(dataService)
        End Function
    End Class
    #End Region
    
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class __TypeMapping
        Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider
        Private Function GetImplementationType(ByVal definitionType As Global.System.Type) As Global.System.Type Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType
            If GetType(Global.LightSwitchApplication.ProductFeedback).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.ProductFeedback)
            End If
            If GetType(Global.LightSwitchApplication.Hyperlink).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Hyperlink)
            End If
            If GetType(Global.LightSwitchApplication.User).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.User)
            End If
            If GetType(Global.LightSwitchApplication.Customer).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Customer)
            End If
            If GetType(Global.LightSwitchApplication.Order).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Order)
            End If
            If GetType(Global.LightSwitchApplication.Product).Equals(definitionType)
                Return GetType(Global.ApplicationData.Implementation.Product)
            End If
            Return Nothing
        End Function
    End Class
End Namespace

Namespace ApplicationData.Implementation

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class ProductFeedback
        Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _ProductDescriptionImplementation() As String Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.ProductDescription
            Get
                Return Me.ProductDescription
            End Get
            Set(ByVal value As String)
                Me.ProductDescription = value
            End Set
        End Property
        
        Private Property _SatisfactionImplementation() As Integer Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.Satisfaction
            Get
                Return Me.Satisfaction
            End Get
            Set(ByVal value As Integer)
                Me.Satisfaction = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Hyperlink
        Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _NameImplementation() As String Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.Name
            Get
                Return Me.Name
            End Get
            Set(ByVal value As String)
                Me.Name = value
            End Set
        End Property
        
        Private Property _URLImplementation() As String Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.URL
            Get
                Return Me.URL
            End Get
            Set(ByVal value As String)
                Me.URL = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class User
        Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _UsernameImplementation() As String Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Username
            Get
                Return Me.Username
            End Get
            Set(ByVal value As String)
                Me.Username = value
            End Set
        End Property
        
        Private Property _PasswordImplementation() As String Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Password
            Get
                Return Me.Password
            End Get
            Set(ByVal value As String)
                Me.Password = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Customer
        Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _SurnameImplementation() As String Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Surname
            Get
                Return Me.Surname
            End Get
            Set(ByVal value As String)
                Me.Surname = value
            End Set
        End Property
        
        Private Property _FirstnameImplementation() As String Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Firstname
            Get
                Return Me.Firstname
            End Get
            Set(ByVal value As String)
                Me.Firstname = value
            End Set
        End Property
        
        Private ReadOnly Property _OrdersImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Orders
            Get
                Return Me.Orders
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    <Global.System.ComponentModel.DataAnnotations.MetadataType(GetType(Global.ApplicationData.Implementation.Order.Metadata))> _
    Partial Public Class Order
        Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _OrderDescImplementation() As String Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.OrderDesc
            Get
                Return Me.OrderDesc
            End Get
            Set(ByVal value As String)
                Me.OrderDesc = value
            End Set
        End Property
        
        Private Property _OrderDateImplementation() As Date Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.OrderDate
            Get
                Return Me.OrderDate
            End Get
            Set(ByVal value As Date)
                Me.OrderDate = value
            End Set
        End Property
        
        Private Property _CustomerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.Customer
            Get
                Return Me.Customer
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Customer = DirectCast(value, Global.ApplicationData.Implementation.Customer)
                If Me.__host IsNot Nothing Then
                    Me.__host.RaisePropertyChanged("Customer")
                End If
            End Set
        End Property
        
        Private Sub OnOrder_CustomerChanged()
            If Me.__host IsNot Nothing Then
                Me.__host.RaisePropertyChanged("Customer")
            End If
        End Sub
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
        
        Friend Class Metadata
        
            <Global.System.ServiceModel.DomainServices.Server.Include> _
            Public Property Customer As Global.ApplicationData.Implementation.Customer
        
        End Class
    End Class
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Partial Public Class Product
        Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation

        Private Property _IdImplementation() As Integer Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.Id
            Get
                Return Me.Id
            End Get
            Set(ByVal value As Integer)
                Me.Id = value
            End Set
        End Property
        
        Private Property _ProductNameImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductName
            Get
                Return Me.ProductName
            End Get
            Set(ByVal value As String)
                Me.ProductName = value
            End Set
        End Property
        
        Private Property _ProductDescriptionImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductDescription
            Get
                Return Me.ProductDescription
            End Get
            Set(ByVal value As String)
                Me.ProductDescription = value
            End Set
        End Property
        
        Private Property _RichTextDescriptionImplementation() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.RichTextDescription
            Get
                Return Me.RichTextDescription
            End Get
            Set(ByVal value As String)
                Me.RichTextDescription = value
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal propertyName As String)
            MyBase.OnPropertyChanged(propertyName)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(propertyName)
            End If
        End Sub
        #End Region
    End Class
    
End Namespace

