'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Namespace LightSwitchApplication.Implementation
    
    #Region "ProductFeedback"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class ProductFeedback
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property ProductDescription() As String Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.ProductDescription
            Get
                Return Me._ProductDescription
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._ProductDescription, value) Then
                    Me.RaiseDataMemberChanging("ProductDescription")
                    Me.ValidateProperty("ProductDescription", value)
                    Me._ProductDescription = value
                    Me.RaiseDataMemberChanged("ProductDescription")
                End If
            End Set
        End Property
        Private _ProductDescription As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Satisfaction() As Integer Implements Global.LightSwitchApplication.ProductFeedback.DetailsClass.IImplementation.Satisfaction
            Get
                Return Me._Satisfaction
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Satisfaction, value) Then
                    Me.RaiseDataMemberChanging("Satisfaction")
                    Me.ValidateProperty("Satisfaction", value)
                    Me._Satisfaction = value
                    Me.RaiseDataMemberChanged("Satisfaction")
                End If
            End Set
        End Property
        Private _Satisfaction As Integer
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "Hyperlink"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class Hyperlink
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Name() As String Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.Name
            Get
                Return Me._Name
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._Name, value) Then
                    Me.RaiseDataMemberChanging("Name")
                    Me.ValidateProperty("Name", value)
                    Me._Name = value
                    Me.RaiseDataMemberChanged("Name")
                End If
            End Set
        End Property
        Private _Name As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property URL() As String Implements Global.LightSwitchApplication.Hyperlink.DetailsClass.IImplementation.URL
            Get
                Return Me._URL
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._URL, value) Then
                    Me.RaiseDataMemberChanging("URL")
                    Me.ValidateProperty("URL", value)
                    Me._URL = value
                    Me.RaiseDataMemberChanged("URL")
                End If
            End Set
        End Property
        Private _URL As String
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "User"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class User
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Username() As String Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Username
            Get
                Return Me._Username
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._Username, value) Then
                    Me.RaiseDataMemberChanging("Username")
                    Me.ValidateProperty("Username", value)
                    Me._Username = value
                    Me.RaiseDataMemberChanged("Username")
                End If
            End Set
        End Property
        Private _Username As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Password() As String Implements Global.LightSwitchApplication.User.DetailsClass.IImplementation.Password
            Get
                Return Me._Password
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._Password, value) Then
                    Me.RaiseDataMemberChanging("Password")
                    Me.ValidateProperty("Password", value)
                    Me._Password = value
                    Me.RaiseDataMemberChanged("Password")
                End If
            End Set
        End Property
        Private _Password As String
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "Customer"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class Customer
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Surname() As String Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Surname
            Get
                Return Me._Surname
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._Surname, value) Then
                    Me.RaiseDataMemberChanging("Surname")
                    Me.ValidateProperty("Surname", value)
                    Me._Surname = value
                    Me.RaiseDataMemberChanged("Surname")
                End If
            End Set
        End Property
        Private _Surname As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Firstname() As String Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Firstname
            Get
                Return Me._Firstname
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._Firstname, value) Then
                    Me.RaiseDataMemberChanging("Firstname")
                    Me.ValidateProperty("Firstname", value)
                    Me._Firstname = value
                    Me.RaiseDataMemberChanged("Firstname")
                End If
            End Set
        End Property
        Private _Firstname As String
        
        <Global.System.ComponentModel.DataAnnotations.Association("Order_Customer", "Id", "Order_Customer")> _
        <Global.System.Xml.Serialization.XmlIgnore()> _
        Public ReadOnly Property Orders() As Global.System.ServiceModel.DomainServices.Client.EntityCollection(Of Order)
            Get
                If (Me._Orders Is Nothing) Then
                    Me._Orders = New Global.System.ServiceModel.DomainServices.Client.EntityCollection(Of Global.LightSwitchApplication.Implementation.Order)(Me, "Orders", AddressOf Me.FilterOrders, AddressOf Me.AttachOrders, AddressOf Me.DetachOrders)
                End If
                Return Me._Orders
            End Get
        End Property
        Private _Orders As Global.System.ServiceModel.DomainServices.Client.EntityCollection(Of Global.LightSwitchApplication.Implementation.Order)
        Private Sub AttachOrders(ByVal entity As Global.LightSwitchApplication.Implementation.Order)
            entity.Customer = Me
        End Sub
        Private Sub DetachOrders(ByVal entity As Global.LightSwitchApplication.Implementation.Order)
            entity.Customer = Nothing
        End Sub
        Private Function FilterOrders(ByVal entity As Global.LightSwitchApplication.Implementation.Order) As Boolean
            Return Global.System.Object.Equals(entity.Order_Customer, Me.Id)
        End Function
        Private ReadOnly Property _OrdersImplementation() As Global.System.Collections.IEnumerable Implements Global.LightSwitchApplication.Customer.DetailsClass.IImplementation.Orders
            Get
                Return Me.Orders
            End Get
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "Order"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class Order
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property OrderDesc() As String Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.OrderDesc
            Get
                Return Me._OrderDesc
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._OrderDesc, value) Then
                    Me.RaiseDataMemberChanging("OrderDesc")
                    Me.ValidateProperty("OrderDesc", value)
                    Me._OrderDesc = value
                    Me.RaiseDataMemberChanged("OrderDesc")
                End If
            End Set
        End Property
        Private _OrderDesc As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property OrderDate() As Date Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.OrderDate
            Get
                Return Me._OrderDate
            End Get
            Set(ByVal value As Date)
                If Not Global.System.Object.Equals(Me._OrderDate, value) Then
                    Me.RaiseDataMemberChanging("OrderDate")
                    Me.ValidateProperty("OrderDate", value)
                    Me._OrderDate = value
                    Me.RaiseDataMemberChanged("OrderDate")
                End If
            End Set
        End Property
        Private _OrderDate As Date
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Order_Customer() As Integer
            Get
                Return Me._Order_Customer
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Order_Customer, value) Then
                    Me.RaiseDataMemberChanging("Order_Customer")
                    Me.ValidateProperty("Order_Customer", value)
                    Me._Order_Customer = value
                    Me.RaiseDataMemberChanged("Order_Customer")
                End If
            End Set
        End Property
        Private _Order_Customer As Integer
        
        <Global.System.ComponentModel.DataAnnotations.Association("Order_Customer", "Order_Customer", "Id", IsForeignKey:=True)> _
        <Global.System.Xml.Serialization.XmlIgnore()> _
        Public Property Customer() As Global.LightSwitchApplication.Implementation.Customer
            Get
                If (Me._Customer Is Nothing) Then
                    Me._Customer = New Global.System.ServiceModel.DomainServices.Client.EntityRef(Of Global.LightSwitchApplication.Implementation.Customer)(Me, "Customer", AddressOf Me.FilterCustomer)
                End If
                Return Me._Customer.Entity
            End Get
            Set(ByVal value As Global.LightSwitchApplication.Implementation.Customer)
                Dim previous As Customer = Me.Customer
                If (previous IsNot value) Then
                    Me.ValidateProperty("Customer", value)
                    If (previous IsNot Nothing) Then
                        Me._Customer.Entity = Nothing
                        previous.Orders.Remove(Me)
                    End If
                    If (value IsNot Nothing) Then
                        Me.Order_Customer = value.Id
                    Else
                        Me.Order_Customer = Nothing
                    End If
                    Me._Customer.Entity = value
                    If (value IsNot Nothing) Then
                        value.Orders.Add(Me)
                    End If
                    Me.RaisePropertyChanged("Customer")
                End If
            End Set
        End Property
        Private _Customer As Global.System.ServiceModel.DomainServices.Client.EntityRef(Of Global.LightSwitchApplication.Implementation.Customer)
        Private Function FilterCustomer(ByVal entity As Global.LightSwitchApplication.Implementation.Customer) As Boolean
            Return Global.System.Object.Equals(entity.Id, Me.Order_Customer)
        End Function
        Private Property _CustomerImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation Implements Global.LightSwitchApplication.Order.DetailsClass.IImplementation.Customer
            Get
                Return Me.Customer
            End Get
            Set(ByVal value As Global.Microsoft.LightSwitch.Internal.IEntityImplementation)
                Me.Customer = DirectCast(value, Global.LightSwitchApplication.Implementation.Customer)
            End Set
        End Property
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "Product"
    <Global.System.Runtime.Serialization.DataContract(Namespace:="http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public NotInheritable Class Product
        Inherits Global.System.ServiceModel.DomainServices.Client.Entity
        Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation
    
        Public Overrides Function GetIdentity() As Object
            If (Me.__host IsNot Nothing AndAlso Me.__host.IsNewlyAdded) Then
                Return Nothing
            End If
    
            Return Me._Id
        End Function
    
        <Global.System.ComponentModel.DataAnnotations.Key()> _
        <Global.System.ComponentModel.DataAnnotations.Editable(False, AllowInitialValue:=True)> _
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property Id() As Integer Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.Id
            Get
                Return Me._Id
            End Get
            Set(ByVal value As Integer)
                If Not Global.System.Object.Equals(Me._Id, value) Then
                    Me.ValidateProperty("Id", value)
                    Me._Id = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        Private _Id As Integer
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property ProductName() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductName
            Get
                Return Me._ProductName
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._ProductName, value) Then
                    Me.RaiseDataMemberChanging("ProductName")
                    Me.ValidateProperty("ProductName", value)
                    Me._ProductName = value
                    Me.RaiseDataMemberChanged("ProductName")
                End If
            End Set
        End Property
        Private _ProductName As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property ProductDescription() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.ProductDescription
            Get
                Return Me._ProductDescription
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._ProductDescription, value) Then
                    Me.RaiseDataMemberChanging("ProductDescription")
                    Me.ValidateProperty("ProductDescription", value)
                    Me._ProductDescription = value
                    Me.RaiseDataMemberChanged("ProductDescription")
                End If
            End Set
        End Property
        Private _ProductDescription As String
        
        <Global.System.Runtime.Serialization.DataMember()> _
        <Global.System.ComponentModel.DataAnnotations.RoundtripOriginal()> _
        Public Property RichTextDescription() As String Implements Global.LightSwitchApplication.Product.DetailsClass.IImplementation.RichTextDescription
            Get
                Return Me._RichTextDescription
            End Get
            Set(ByVal value As String)
                If Not Global.System.Object.Equals(Me._RichTextDescription, value) Then
                    Me.RaiseDataMemberChanging("RichTextDescription")
                    Me.ValidateProperty("RichTextDescription", value)
                    Me._RichTextDescription = value
                    Me.RaiseDataMemberChanged("RichTextDescription")
                End If
            End Set
        End Property
        Private _RichTextDescription As String
        
        #Region "IEntityImplementation Members"
        Private __host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost
        
        Private ReadOnly Property __HostImplementation() As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Host
            Get
                Return Me.__host
            End Get
        End Property
        
        Private Sub _Initialize(ByVal host As Global.Microsoft.LightSwitch.Internal.IEntityImplementationHost) Implements Global.Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize
            Me.__host = host
        End Sub
        
        Protected Overrides Sub OnPropertyChanged(ByVal e As Global.System.ComponentModel.PropertyChangedEventArgs)
            MyBase.OnPropertyChanged(e)
        
            If Not Me.__host Is Nothing Then
                Me.__host.RaisePropertyChanged(e.PropertyName)
            End If
        End Sub
        #End Region
    End Class
    #End Region
    
    #Region "ApplicationData"
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class ApplicationData
        Inherits Global.Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    
        Public Sub New(ByVal dataService As Global.Microsoft.LightSwitch.IDataService)
            MyBase.New(dataService, Global.Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient(Of IApplicationDataContract)(New Global.System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", Global.System.UriKind.Relative)))
        End Sub
    
        Public ReadOnly Property ProductFeedbackEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.ProductFeedback)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.ProductFeedback)()
            End Get
        End Property
        Public ReadOnly Property HyperlinkEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.Hyperlink)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.Hyperlink)()
            End Get
        End Property
        Public ReadOnly Property UserEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.User)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.User)()
            End Get
        End Property
        Public ReadOnly Property CustomerEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.Customer)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.Customer)()
            End Get
        End Property
        Public ReadOnly Property OrderEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.Order)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.Order)()
            End Get
        End Property
        Public ReadOnly Property ProductEntityList() As Global.System.ServiceModel.DomainServices.Client.EntitySet(Of Global.LightSwitchApplication.Implementation.Product)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Global.LightSwitchApplication.Implementation.Product)()
            End Get
        End Property
        Protected Overrides Function CreateEntityContainer() As Global.System.ServiceModel.DomainServices.Client.EntityContainer
            Return New ApplicationDataEntityContainer
        End Function
    
        Friend NotInheritable Class ApplicationDataEntityContainer
            Inherits Global.System.ServiceModel.DomainServices.Client.EntityContainer
            Public Sub New()
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.ProductFeedback)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.Hyperlink)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.User)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.Customer)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.Order)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
                Me.CreateEntitySet(Of Global.LightSwitchApplication.Implementation.Product)(Global.System.ServiceModel.DomainServices.Client.EntitySetOperations.All)
            End Sub
        End Class
    
        #Region "Service Contract Interface"
    
        <Global.System.ServiceModel.ServiceContract> _
        Public Interface IApplicationDataContract
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProductFeedbacks_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProductFeedbacks_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.ProductFeedback)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProductFeedbacks_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProductFeedbacks_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.ProductFeedback)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/ProductFeedbacks_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProductFeedbacks_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProductFeedbacks_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.ProductFeedback)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginHyperlinks_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndHyperlinks_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Hyperlink)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginHyperlinks_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndHyperlinks_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Hyperlink)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Hyperlinks_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginHyperlinks_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndHyperlinks_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Hyperlink)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Users_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Users_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Users_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginUsers_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndUsers_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.User)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Users_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Users_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Users_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginUsers_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndUsers_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.User)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Users_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Users_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Users_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginUsers_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndUsers_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.User)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Customers_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Customers_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Customers_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginCustomers_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndCustomers_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Customer)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Customers_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Customers_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Customers_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginCustomers_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndCustomers_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Customer)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Customers_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Customers_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Customers_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginCustomers_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndCustomers_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Customer)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Orders_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Orders_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Orders_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginOrders_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndOrders_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Order)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Orders_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Orders_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Orders_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginOrders_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndOrders_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Order)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Orders_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Orders_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Orders_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginOrders_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndOrders_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Order)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Products_Single", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Products_SingleResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Products_SingleDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProducts_Single(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProducts_Single(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Product)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Products_SingleOrDefault", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Products_SingleOrDefaultResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Products_SingleOrDefaultDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProducts_SingleOrDefault(ByVal frameworkOperators as String, ByVal Id As Global.System.Nullable(Of Integer), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProducts_SingleOrDefault(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Product)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/Products_All", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/Products_AllResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/Products_AllDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginProducts_All(ByVal frameworkOperators as String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndProducts_All(ByVal result As Global.System.IAsyncResult) As Global.System.ServiceModel.DomainServices.Client.QueryResult(Of Global.LightSwitchApplication.Implementation.Product)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function BeginSubmitChanges(ByVal changeSet As Global.System.Collections.Generic.IEnumerable(Of Global.System.ServiceModel.DomainServices.Client.ChangeSetEntry), ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function EndSubmitChanges(ByVal result As Global.System.IAsyncResult) As Global.System.Collections.Generic.IEnumerable(Of Global.System.ServiceModel.DomainServices.Client.ChangeSetEntry)
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function Begin__GetEntitySetCanInformation(ByVal entitySetName As String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function End__GetEntitySetCanInformation(ByVal result As Global.System.IAsyncResult) As Integer
            
            <Global.System.ServiceModel.OperationContract(AsyncPattern:=True, Action:="http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction:="http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             Global.System.ServiceModel.Web.WebGet(),
             Global.System.ServiceModel.FaultContract(GetType(Global.System.ServiceModel.DomainServices.Client.DomainServiceFault), Action:="http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name:="DomainServiceFault", Namespace:="DomainServices")> _
            Function Begin__CanExecuteOperation(ByVal operationName As String, ByVal callback As Global.System.AsyncCallback, ByVal asyncState As Global.System.Object) As Global.System.IAsyncResult
            Function End__CanExecuteOperation(ByVal result As Global.System.IAsyncResult) As Boolean
            
        End Interface
    
        #End Region
    
        Protected Overrides Function CreateEntityImplementation(Of T As Global.Microsoft.LightSwitch.IEntityObject)() As Global.Microsoft.LightSwitch.Internal.IEntityImplementation
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.ProductFeedback)) Then
                Return New Global.LightSwitchApplication.Implementation.ProductFeedback()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Hyperlink)) Then
                Return New Global.LightSwitchApplication.Implementation.Hyperlink()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.User)) Then
                Return New Global.LightSwitchApplication.Implementation.User()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Customer)) Then
                Return New Global.LightSwitchApplication.Implementation.Customer()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Order)) Then
                Return New Global.LightSwitchApplication.Implementation.Order()
            End If
            If GetType(T).Equals(GetType(Global.LightSwitchApplication.Product)) Then
                Return New Global.LightSwitchApplication.Implementation.Product()
            End If
            Return Nothing
        End Function
    End Class
    #End Region
    
    #Region "DataServiceImplementationFactory"
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.IDataServiceFactory))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class DataServiceFactory
        Inherits Global.Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    
        Protected Overrides Function CreateDataService(ByVal dataServiceType As Global.System.Type) As Global.Microsoft.LightSwitch.IDataService
            If dataServiceType.Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.ApplicationData()
            End If
            Return MyBase.CreateDataService(dataServiceType)
        End Function
    
        Protected Overrides Function CreateDataServiceImplementation(Of TDataService As Global.Microsoft.LightSwitch.IDataService)(ByVal dataService As TDataService) As Global.Microsoft.LightSwitch.Internal.IDataServiceImplementation
            If GetType(TDataService).Equals(GetType(Global.LightSwitchApplication.ApplicationData)) Then
                Return New Global.LightSwitchApplication.Implementation.ApplicationData(dataService)
            End If
            Return MyBase.CreateDataServiceImplementation(dataService)
        End Function
    End Class
    #End Region
    
    <Global.System.ComponentModel.Composition.PartCreationPolicy(Global.System.ComponentModel.Composition.CreationPolicy.Shared)> _
    <Global.System.ComponentModel.Composition.Export(GetType(Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider))> _
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")> _
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
    Public Class __TypeMapping
        Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider
        Private Function GetImplementationType(ByVal definitionType As Global.System.Type) As Global.System.Type Implements Global.Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType
            If GetType(Global.LightSwitchApplication.ProductFeedback).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.ProductFeedback)
            End If
            If GetType(Global.LightSwitchApplication.Hyperlink).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.Hyperlink)
            End If
            If GetType(Global.LightSwitchApplication.User).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.User)
            End If
            If GetType(Global.LightSwitchApplication.Customer).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.Customer)
            End If
            If GetType(Global.LightSwitchApplication.Order).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.Order)
            End If
            If GetType(Global.LightSwitchApplication.Product).Equals(definitionType)
                Return GetType(Global.LightSwitchApplication.Implementation.Product)
            End If
            Return Nothing
        End Function
    End Class
End Namespace
