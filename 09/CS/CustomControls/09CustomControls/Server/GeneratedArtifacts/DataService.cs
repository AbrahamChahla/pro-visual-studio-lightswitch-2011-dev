//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updating(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updated(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::LightSwitchApplication.Customer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Inserting(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Inserted(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Updating(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Updated(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Deleting(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Deleted(global::LightSwitchApplication.Hyperlink entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Validate(global::LightSwitchApplication.Hyperlink entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updating(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updated(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Order entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Inserting(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Inserted(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Updating(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Updated(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Deleting(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Deleted(global::LightSwitchApplication.ProductFeedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Validate(global::LightSwitchApplication.ProductFeedback entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updating(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updated(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hyperlinks_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductFeedbacks_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Validate);
            private static bool __Customers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanInsert(ref result);
                return result;
            }
            private static bool __Customers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanUpdate(ref result);
                return result;
            }
            private static bool __Customers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanDelete(ref result);
                return result;
            }
            private static bool __Customers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanRead(ref result);
                return result;
            }
            private static void __Customers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserting(e);
            }
            private static void __Customers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserted(e);
            }
            private static void __Customers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updating(e);
            }
            private static void __Customers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updated(e);
            }
            private static void __Customers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleting(e);
            }
            private static void __Customers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleted(e);
            }
            private static void __Customers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Customers_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>
                __HyperlinksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>(
                    "Hyperlinks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Validate);
            private static bool __Hyperlinks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hyperlinks_CanInsert(ref result);
                return result;
            }
            private static bool __Hyperlinks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hyperlinks_CanUpdate(ref result);
                return result;
            }
            private static bool __Hyperlinks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hyperlinks_CanDelete(ref result);
                return result;
            }
            private static bool __Hyperlinks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hyperlinks_CanRead(ref result);
                return result;
            }
            private static void __Hyperlinks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Inserting(e);
            }
            private static void __Hyperlinks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Inserted(e);
            }
            private static void __Hyperlinks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Updating(e);
            }
            private static void __Hyperlinks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Updated(e);
            }
            private static void __Hyperlinks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Deleting(e);
            }
            private static void __Hyperlinks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e)
            {
                d.Hyperlinks_Deleted(e);
            }
            private static void __Hyperlinks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hyperlink e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Hyperlinks_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>(
                    "Orders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Validate);
            private static bool __Orders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanInsert(ref result);
                return result;
            }
            private static bool __Orders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanUpdate(ref result);
                return result;
            }
            private static bool __Orders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanDelete(ref result);
                return result;
            }
            private static bool __Orders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserting(e);
            }
            private static void __Orders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserted(e);
            }
            private static void __Orders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updating(e);
            }
            private static void __Orders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updated(e);
            }
            private static void __Orders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleting(e);
            }
            private static void __Orders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleted(e);
            }
            private static void __Orders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>
                __ProductFeedbacksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>(
                    "ProductFeedbacks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Validate);
            private static bool __ProductFeedbacks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductFeedbacks_CanInsert(ref result);
                return result;
            }
            private static bool __ProductFeedbacks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductFeedbacks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductFeedbacks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductFeedbacks_CanDelete(ref result);
                return result;
            }
            private static bool __ProductFeedbacks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductFeedbacks_CanRead(ref result);
                return result;
            }
            private static void __ProductFeedbacks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Inserting(e);
            }
            private static void __ProductFeedbacks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Inserted(e);
            }
            private static void __ProductFeedbacks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Updating(e);
            }
            private static void __ProductFeedbacks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Updated(e);
            }
            private static void __ProductFeedbacks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Deleting(e);
            }
            private static void __ProductFeedbacks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e)
            {
                d.ProductFeedbacks_Deleted(e);
            }
            private static void __ProductFeedbacks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductFeedback e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductFeedbacks_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Validate);
            private static bool __Products_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanInsert(ref result);
                return result;
            }
            private static bool __Products_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanUpdate(ref result);
                return result;
            }
            private static bool __Products_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanDelete(ref result);
                return result;
            }
            private static bool __Products_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserting(e);
            }
            private static void __Products_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserted(e);
            }
            private static void __Products_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updating(e);
            }
            private static void __Products_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updated(e);
            }
            private static void __Products_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleting(e);
            }
            private static void __Products_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleted(e);
            }
            private static void __Products_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Validate);
            private static bool __Users_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Single_PreprocessQuery);
            private static bool __Customers_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_Single_CanExecute(ref r);
                return r;
            }
            private static void __Customers_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Customers_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[1]);
            }
            private static void __Customers_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Customers_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[1];
                d.Customers_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_SingleOrDefault_PreprocessQuery);
            private static bool __Customers_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Customers_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Customers_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[1]);
            }
            private static void __Customers_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Customers_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[1];
                d.Customers_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __Customers_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_All_PreprocessQuery);
            private static bool __Customers_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_All_CanExecute(ref r);
                return r;
            }
            private static void __Customers_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_All_Executing();
            }
            private static void __Customers_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[0]);
            }
            private static void __Customers_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Customers_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[0];
                d.Customers_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>
                __Hyperlinks_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>(
                    "Hyperlinks_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_Single_PreprocessQuery);
            private static bool __Hyperlinks_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Hyperlinks_Single_CanExecute(ref r);
                return r;
            }
            private static void __Hyperlinks_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Hyperlinks_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink>)args[1]);
            }
            private static void __Hyperlinks_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Hyperlinks_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Hyperlinks_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink>)args[1];
                d.Hyperlinks_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>
                __Hyperlinks_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>(
                    "Hyperlinks_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_SingleOrDefault_PreprocessQuery);
            private static bool __Hyperlinks_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Hyperlinks_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Hyperlinks_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Hyperlinks_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink>)args[1]);
            }
            private static void __Hyperlinks_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Hyperlinks_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Hyperlinks_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink>)args[1];
                d.Hyperlinks_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>
                __Hyperlinks_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hyperlink>(
                    "Hyperlinks_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hyperlinks_All_PreprocessQuery);
            private static bool __Hyperlinks_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Hyperlinks_All_CanExecute(ref r);
                return r;
            }
            private static void __Hyperlinks_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_All_Executing();
            }
            private static void __Hyperlinks_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Hyperlinks_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hyperlink>)args[0]);
            }
            private static void __Hyperlinks_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Hyperlinks_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Hyperlinks_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Hyperlink>)args[0];
                d.Hyperlinks_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>
                __Orders_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>(
                    "Orders_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Single_PreprocessQuery);
            private static bool __Orders_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Orders_Single_CanExecute(ref r);
                return r;
            }
            private static void __Orders_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[1]);
            }
            private static void __Orders_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[1];
                d.Orders_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>
                __Orders_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>(
                    "Orders_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_SingleOrDefault_PreprocessQuery);
            private static bool __Orders_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Orders_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Orders_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Orders_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[1]);
            }
            private static void __Orders_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Orders_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[1];
                d.Orders_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>
                __Orders_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>(
                    "Orders_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_All_PreprocessQuery);
            private static bool __Orders_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Orders_All_CanExecute(ref r);
                return r;
            }
            private static void __Orders_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_All_Executing();
            }
            private static void __Orders_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Orders_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[0]);
            }
            private static void __Orders_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Orders_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[0];
                d.Orders_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>
                __ProductFeedbacks_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>(
                    "ProductFeedbacks_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_Single_PreprocessQuery);
            private static bool __ProductFeedbacks_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductFeedbacks_Single_CanExecute(ref r);
                return r;
            }
            private static void __ProductFeedbacks_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProductFeedbacks_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback>)args[1]);
            }
            private static void __ProductFeedbacks_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductFeedbacks_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProductFeedbacks_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback>)args[1];
                d.ProductFeedbacks_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>
                __ProductFeedbacks_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>(
                    "ProductFeedbacks_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_SingleOrDefault_PreprocessQuery);
            private static bool __ProductFeedbacks_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductFeedbacks_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ProductFeedbacks_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProductFeedbacks_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback>)args[1]);
            }
            private static void __ProductFeedbacks_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductFeedbacks_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProductFeedbacks_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback>)args[1];
                d.ProductFeedbacks_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>
                __ProductFeedbacks_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductFeedback>(
                    "ProductFeedbacks_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductFeedbacks_All_PreprocessQuery);
            private static bool __ProductFeedbacks_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductFeedbacks_All_CanExecute(ref r);
                return r;
            }
            private static void __ProductFeedbacks_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_All_Executing();
            }
            private static void __ProductFeedbacks_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductFeedbacks_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductFeedback>)args[0]);
            }
            private static void __ProductFeedbacks_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductFeedbacks_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductFeedbacks_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductFeedback>)args[0];
                d.ProductFeedbacks_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __Products_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Single_PreprocessQuery);
            private static bool __Products_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Products_Single_CanExecute(ref r);
                return r;
            }
            private static void __Products_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Products_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[1]);
            }
            private static void __Products_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Products_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[1];
                d.Products_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __Products_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_SingleOrDefault_PreprocessQuery);
            private static bool __Products_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Products_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Products_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Products_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[1]);
            }
            private static void __Products_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Products_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[1];
                d.Products_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __Products_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_All_PreprocessQuery);
            private static bool __Products_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Products_All_CanExecute(ref r);
                return r;
            }
            private static void __Products_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_All_Executing();
            }
            private static void __Products_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Products_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __Products_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Products_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.Products_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __Users_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Single_PreprocessQuery);
            private static bool __Users_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Users_Single_CanExecute(ref r);
                return r;
            }
            private static void __Users_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Users_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __Users_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_SingleOrDefault_PreprocessQuery);
            private static bool __Users_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Users_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Users_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Users_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __Users_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_All_PreprocessQuery);
            private static bool __Users_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Users_All_CanExecute(ref r);
                return r;
            }
            private static void __Users_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_All_Executing();
            }
            private static void __Users_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Users_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[0]);
            }
            private static void __Users_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Users_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[0];
                d.Users_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
